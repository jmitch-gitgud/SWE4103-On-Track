{"ast":null,"code":"'use strict'; // selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\n\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n  var high = buffer.readInt32BE(0);\n  var low = buffer.readUInt32BE(4);\n  var sign = '';\n\n  if (high < 0) {\n    high = ~high + (low === 0);\n    low = ~low + 1 >>> 0;\n    sign = '-';\n  }\n\n  var result = '';\n  var carry;\n  var t;\n  var digits;\n  var pad;\n  var l;\n  var i;\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    t = 0x100000000 * carry + low;\n    digits = '' + t % BASE;\n    return sign + digits + result;\n  }\n}\n\nmodule.exports = readInt8;","map":null,"metadata":{},"sourceType":"script"}