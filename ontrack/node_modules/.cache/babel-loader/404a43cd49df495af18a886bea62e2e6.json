{"ast":null,"code":"/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\nif (!globalThis.DOMException) {\n  try {\n    const {\n      MessageChannel\n    } = require('worker_threads'),\n          port = new MessageChannel().port1,\n          ab = new ArrayBuffer();\n\n    port.postMessage(ab, [ab, ab]);\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (globalThis.DOMException = err.constructor);\n  }\n}\n\nmodule.exports = globalThis.DOMException;","map":{"version":3,"names":["globalThis","DOMException","MessageChannel","require","port","port1","ab","ArrayBuffer","postMessage","err","constructor","name","module","exports"],"sources":["/home/jordanm/Documents/GitHub/SWE4103-Team-Project/ontrack/node_modules/node-domexception/index.js"],"sourcesContent":["/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n"],"mappings":"AAAA;AAEA,IAAI,CAACA,UAAU,CAACC,YAAhB,EAA8B;EAC5B,IAAI;IACF,MAAM;MAAEC;IAAF,IAAqBC,OAAO,CAAC,gBAAD,CAAlC;IAAA,MACAC,IAAI,GAAG,IAAIF,cAAJ,GAAqBG,KAD5B;IAAA,MAEAC,EAAE,GAAG,IAAIC,WAAJ,EAFL;;IAGAH,IAAI,CAACI,WAAL,CAAiBF,EAAjB,EAAqB,CAACA,EAAD,EAAKA,EAAL,CAArB;EACD,CALD,CAKE,OAAOG,GAAP,EAAY;IACZA,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,KAAyB,cAAzB,KACEX,UAAU,CAACC,YAAX,GAA0BQ,GAAG,CAACC,WADhC;EAGD;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiBb,UAAU,CAACC,YAA5B"},"metadata":{},"sourceType":"script"}