{"ast":null,"code":"/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, { PassThrough, pipeline as pump } from 'node:stream';\nimport { Buffer } from 'node:buffer';\nimport dataUriToBuffer from 'data-uri-to-buffer';\nimport { writeToStream, clone } from './body.js';\nimport Response from './response.js';\nimport Headers, { fromRawHeaders } from './headers.js';\nimport Request, { getNodeRequestOptions } from './request.js';\nimport { FetchError } from './errors/fetch-error.js';\nimport { AbortError } from './errors/abort-error.js';\nimport { isRedirect } from './utils/is-redirect.js';\nimport { FormData } from 'formdata-polyfill/esm.min.js';\nimport { isDomainOrSubdomain, isSameProtocol } from './utils/is.js';\nimport { parseReferrerPolicyFromHeader } from './utils/referrer.js';\nimport { Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom } from 'fetch-blob/from.js';\nexport { FormData, Headers, Request, Response, FetchError, AbortError, isRedirect };\nexport { Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom };\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\n\nexport default async function fetch(url, options_) {\n  return new Promise((resolve, reject) => {\n    // Build request object\n    const request = new Request(url, options_);\n    const {\n      parsedURL,\n      options\n    } = getNodeRequestOptions(request);\n\n    if (!supportedSchemas.has(parsedURL.protocol)) {\n      throw new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n    }\n\n    if (parsedURL.protocol === 'data:') {\n      const data = dataUriToBuffer(request.url);\n      const response = new Response(data, {\n        headers: {\n          'Content-Type': data.typeFull\n        }\n      });\n      resolve(response);\n      return;\n    } // Wrap http.request into fetch\n\n\n    const send = (parsedURL.protocol === 'https:' ? https : http).request;\n    const {\n      signal\n    } = request;\n    let response = null;\n\n    const abort = () => {\n      const error = new AbortError('The operation was aborted.');\n      reject(error);\n\n      if (request.body && request.body instanceof Stream.Readable) {\n        request.body.destroy(error);\n      }\n\n      if (!response || !response.body) {\n        return;\n      }\n\n      response.body.emit('error', error);\n    };\n\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n\n    const abortAndFinalize = () => {\n      abort();\n      finalize();\n    }; // Send request\n\n\n    const request_ = send(parsedURL.toString(), options);\n\n    if (signal) {\n      signal.addEventListener('abort', abortAndFinalize);\n    }\n\n    const finalize = () => {\n      request_.abort();\n\n      if (signal) {\n        signal.removeEventListener('abort', abortAndFinalize);\n      }\n    };\n\n    request_.on('error', error => {\n      reject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n      finalize();\n    });\n    fixResponseChunkedTransferBadEnding(request_, error => {\n      if (response && response.body) {\n        response.body.destroy(error);\n      }\n    });\n    /* c8 ignore next 18 */\n\n    if (process.version < 'v14') {\n      // Before Node.js 14, pipeline() does not fully support async iterators and does not always\n      // properly handle when the socket close/end events are out of order.\n      request_.on('socket', s => {\n        let endedWithEventsCount;\n        s.prependListener('end', () => {\n          endedWithEventsCount = s._eventsCount;\n        });\n        s.prependListener('close', hadError => {\n          // if end happened before close but the socket didn't emit an error, do it now\n          if (response && endedWithEventsCount < s._eventsCount && !hadError) {\n            const error = new Error('Premature close');\n            error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n            response.body.emit('error', error);\n          }\n        });\n      });\n    }\n\n    request_.on('response', response_ => {\n      request_.setTimeout(0);\n      const headers = fromRawHeaders(response_.rawHeaders); // HTTP fetch step 5\n\n      if (isRedirect(response_.statusCode)) {\n        // HTTP fetch step 5.2\n        const location = headers.get('Location'); // HTTP fetch step 5.3\n\n        let locationURL = null;\n\n        try {\n          locationURL = location === null ? null : new URL(location, request.url);\n        } catch {\n          // error here can only be invalid URL in Location: header\n          // do not throw when options.redirect == manual\n          // let the user extract the errorneous redirect URL\n          if (request.redirect !== 'manual') {\n            reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n            finalize();\n            return;\n          }\n        } // HTTP fetch step 5.5\n\n\n        switch (request.redirect) {\n          case 'error':\n            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n            finalize();\n            return;\n\n          case 'manual':\n            // Nothing to do\n            break;\n\n          case 'follow':\n            {\n              // HTTP-redirect fetch step 2\n              if (locationURL === null) {\n                break;\n              } // HTTP-redirect fetch step 5\n\n\n              if (request.counter >= request.follow) {\n                reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n                finalize();\n                return;\n              } // HTTP-redirect fetch step 6 (counter increment)\n              // Create a new Request object.\n\n\n              const requestOptions = {\n                headers: new Headers(request.headers),\n                follow: request.follow,\n                counter: request.counter + 1,\n                agent: request.agent,\n                compress: request.compress,\n                method: request.method,\n                body: clone(request),\n                signal: request.signal,\n                size: request.size,\n                referrer: request.referrer,\n                referrerPolicy: request.referrerPolicy\n              }; // when forwarding sensitive headers like \"Authorization\",\n              // \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n              // headers will be ignored when following a redirect to a domain\n              // that is not a subdomain match or exact match of the initial domain.\n              // For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n              // will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n              // headers will also be ignored when following a redirect to a domain using\n              // a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n              // will not forward the sensitive headers\n\n              if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n                for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n                  requestOptions.headers.delete(name);\n                }\n              } // HTTP-redirect fetch step 9\n\n\n              if (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n                reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n                finalize();\n                return;\n              } // HTTP-redirect fetch step 11\n\n\n              if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST') {\n                requestOptions.method = 'GET';\n                requestOptions.body = undefined;\n                requestOptions.headers.delete('content-length');\n              } // HTTP-redirect fetch step 14\n\n\n              const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\n              if (responseReferrerPolicy) {\n                requestOptions.referrerPolicy = responseReferrerPolicy;\n              } // HTTP-redirect fetch step 15\n\n\n              resolve(fetch(new Request(locationURL, requestOptions)));\n              finalize();\n              return;\n            }\n\n          default:\n            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n        }\n      } // Prepare response\n\n\n      if (signal) {\n        response_.once('end', () => {\n          signal.removeEventListener('abort', abortAndFinalize);\n        });\n      }\n\n      let body = pump(response_, new PassThrough(), error => {\n        if (error) {\n          reject(error);\n        }\n      }); // see https://github.com/nodejs/node/pull/29376\n\n      /* c8 ignore next 3 */\n\n      if (process.version < 'v12.10') {\n        response_.on('aborted', abortAndFinalize);\n      }\n\n      const responseOptions = {\n        url: request.url,\n        status: response_.statusCode,\n        statusText: response_.statusMessage,\n        headers,\n        size: request.size,\n        counter: request.counter,\n        highWaterMark: request.highWaterMark\n      }; // HTTP-network fetch step 12.1.1.3\n\n      const codings = headers.get('Content-Encoding'); // HTTP-network fetch step 12.1.1.4: handle content codings\n      // in following scenarios we ignore compression support\n      // 1. compression support is disabled\n      // 2. HEAD request\n      // 3. no Content-Encoding header\n      // 4. no content response (204)\n      // 5. content not modified response (304)\n\n      if (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // For Node v6+\n      // Be less strict when decoding compressed responses, since sometimes\n      // servers send slightly invalid responses that are still accepted\n      // by common browsers.\n      // Always using Z_SYNC_FLUSH is what cURL does.\n\n\n      const zlibOptions = {\n        flush: zlib.Z_SYNC_FLUSH,\n        finishFlush: zlib.Z_SYNC_FLUSH\n      }; // For gzip\n\n      if (codings === 'gzip' || codings === 'x-gzip') {\n        body = pump(body, zlib.createGunzip(zlibOptions), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // For deflate\n\n\n      if (codings === 'deflate' || codings === 'x-deflate') {\n        // Handle the infamous raw deflate response from old servers\n        // a hack for old IIS and Apache servers\n        const raw = pump(response_, new PassThrough(), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        raw.once('data', chunk => {\n          // See http://stackoverflow.com/questions/37519828\n          if ((chunk[0] & 0x0F) === 0x08) {\n            body = pump(body, zlib.createInflate(), error => {\n              if (error) {\n                reject(error);\n              }\n            });\n          } else {\n            body = pump(body, zlib.createInflateRaw(), error => {\n              if (error) {\n                reject(error);\n              }\n            });\n          }\n\n          response = new Response(body, responseOptions);\n          resolve(response);\n        });\n        raw.once('end', () => {\n          // Some old IIS servers return zero-length OK deflate responses, so\n          // 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n          if (!response) {\n            response = new Response(body, responseOptions);\n            resolve(response);\n          }\n        });\n        return;\n      } // For br\n\n\n      if (codings === 'br') {\n        body = pump(body, zlib.createBrotliDecompress(), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // Otherwise, use response as-is\n\n\n      response = new Response(body, responseOptions);\n      resolve(response);\n    }); // eslint-disable-next-line promise/prefer-await-to-then\n\n    writeToStream(request_, request).catch(reject);\n  });\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n  const LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n  let isChunkedTransfer = false;\n  let properLastChunkReceived = false;\n  let previousChunk;\n  request.on('response', response => {\n    const {\n      headers\n    } = response;\n    isChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n  });\n  request.on('socket', socket => {\n    const onSocketClose = () => {\n      if (isChunkedTransfer && !properLastChunkReceived) {\n        const error = new Error('Premature close');\n        error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n        errorCallback(error);\n      }\n    };\n\n    const onData = buf => {\n      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0; // Sometimes final 0-length chunk and end of message code are in separate packets\n\n      if (!properLastChunkReceived && previousChunk) {\n        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;\n      }\n\n      previousChunk = buf;\n    };\n\n    socket.prependListener('close', onSocketClose);\n    socket.on('data', onData);\n    request.on('close', () => {\n      socket.removeListener('close', onSocketClose);\n      socket.removeListener('data', onData);\n    });\n  });\n}","map":{"version":3,"names":["http","https","zlib","Stream","PassThrough","pipeline","pump","Buffer","dataUriToBuffer","writeToStream","clone","Response","Headers","fromRawHeaders","Request","getNodeRequestOptions","FetchError","AbortError","isRedirect","FormData","isDomainOrSubdomain","isSameProtocol","parseReferrerPolicyFromHeader","Blob","File","fileFromSync","fileFrom","blobFromSync","blobFrom","supportedSchemas","Set","fetch","url","options_","Promise","resolve","reject","request","parsedURL","options","has","protocol","TypeError","replace","data","response","headers","typeFull","send","signal","abort","error","body","Readable","destroy","emit","aborted","abortAndFinalize","finalize","request_","toString","addEventListener","removeEventListener","on","message","fixResponseChunkedTransferBadEnding","process","version","s","endedWithEventsCount","prependListener","_eventsCount","hadError","Error","code","response_","setTimeout","rawHeaders","statusCode","location","get","locationURL","URL","redirect","counter","follow","requestOptions","agent","compress","method","size","referrer","referrerPolicy","name","delete","undefined","responseReferrerPolicy","once","responseOptions","status","statusText","statusMessage","highWaterMark","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","raw","chunk","createInflate","createInflateRaw","createBrotliDecompress","catch","errorCallback","LAST_CHUNK","from","isChunkedTransfer","properLastChunkReceived","previousChunk","socket","onSocketClose","onData","buf","compare","slice","removeListener"],"sources":["/home/jordanm/Documents/GitHub/SWE4103-Team-Project/ontrack/node_modules/node-fetch/src/index.js"],"sourcesContent":["/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}