{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jordanm/Documents/GitHub/SWE4103-Team-Project/ontrack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/jordanm/Documents/GitHub/SWE4103-Team-Project/ontrack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BufferReader = void 0;\nvar emptyBuffer = Buffer.allocUnsafe(0);\n\nvar BufferReader = /*#__PURE__*/function () {\n  function BufferReader() {\n    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, BufferReader);\n\n    this.offset = offset;\n    this.buffer = emptyBuffer; // TODO(bmc): support non-utf8 encoding?\n\n    this.encoding = 'utf-8';\n  }\n\n  _createClass(BufferReader, [{\n    key: \"setBuffer\",\n    value: function setBuffer(offset, buffer) {\n      this.offset = offset;\n      this.buffer = buffer;\n    }\n  }, {\n    key: \"int16\",\n    value: function int16() {\n      var result = this.buffer.readInt16BE(this.offset);\n      this.offset += 2;\n      return result;\n    }\n  }, {\n    key: \"byte\",\n    value: function byte() {\n      var result = this.buffer[this.offset];\n      this.offset++;\n      return result;\n    }\n  }, {\n    key: \"int32\",\n    value: function int32() {\n      var result = this.buffer.readInt32BE(this.offset);\n      this.offset += 4;\n      return result;\n    }\n  }, {\n    key: \"string\",\n    value: function string(length) {\n      var result = this.buffer.toString(this.encoding, this.offset, this.offset + length);\n      this.offset += length;\n      return result;\n    }\n  }, {\n    key: \"cstring\",\n    value: function cstring() {\n      var start = this.offset;\n      var end = start;\n\n      while (this.buffer[end++] !== 0) {}\n\n      this.offset = end;\n      return this.buffer.toString(this.encoding, start, end - 1);\n    }\n  }, {\n    key: \"bytes\",\n    value: function bytes(length) {\n      var result = this.buffer.slice(this.offset, this.offset + length);\n      this.offset += length;\n      return result;\n    }\n  }]);\n\n  return BufferReader;\n}();\n\nexports.BufferReader = BufferReader;","map":null,"metadata":{},"sourceType":"script"}