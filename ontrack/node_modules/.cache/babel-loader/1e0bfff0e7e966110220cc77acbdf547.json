{"ast":null,"code":"// Defaultable APIs\n//\n// Copyright 2011 Iris Couch\n//\n//    Licensed under the Apache License, Version 2.0 (the \"License\");\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n//\n//        http://www.apache.org/licenses/LICENSE-2.0\n//\n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\nmodule.exports = good_args(defaultable);\nmodule.exports.def = good_args(fresh_defaultable);\nmodule.exports.merge = merge_obj;\n\nvar path_lib = require('path');\n\nvar real_require = require;\n\nfunction fresh_defaultable(_mod, _defs, _definer) {\n  var mod = defaultable.apply(this, arguments);\n  mod.defaults._defaultable.fresh = true;\n  return mod;\n}\n\nfunction defaultable(real_module, initial_defs, definer) {\n  if (!real_module || !real_module.exports) throw new Error('Need to provide the module, with .exports object');\n  if (!is_obj(initial_defs)) throw new Error('Defaults must be an object'); // use real_module.id if filename not available (running on couchdb)\n\n  var mod_dir = path_lib.dirname(real_module.filename || real_module.id);\n  var mod_require = real_module.require || workaround_require;\n  workaround_require._defaultable = true;\n\n  function workaround_require(path) {\n    if (/^\\.\\//.test(path) || /^\\.\\.\\//.test(path)) path = path_lib.resolve(mod_dir, path);\n\n    try {\n      return real_require(path);\n    } catch (er) {\n      // This CouchDB workaround really belongs in CouchDB. CouchDB errors look like this:\n      //   [\"error\",\"invalid_require_path\",\"Must require a JavaScript string, not: object\"]\n      if (er[0] !== \"error\" || er[1] !== \"invalid_require_path\" || er[2] !== \"Must require a JavaScript string, not: object\") throw er;\n\n      try {\n        return real_require(path + '/index');\n      } catch (er2) {\n        throw er;\n      } // Nope, throw the original error.\n\n    }\n  }\n\n  var defaulter = make_defaulter({});\n  real_module.exports = defaulter(initial_defs);\n  return real_module.exports;\n\n  function make_defaulter(old_defs) {\n    defaulter._defaultable = {};\n    return defaulter;\n\n    function defaulter(new_defs) {\n      var faux_exports = {};\n      var faux_module = {\n        \"exports\": faux_exports\n      };\n      var final_defs = merge_obj(new_defs || {}, old_defs);\n      require._defaultable = true;\n\n      function require(path) {\n        var mod = mod_require.call(real_module, path);\n        if (mod.defaults && typeof mod.defaults === 'function' && mod.defaults._defaultable && !mod.defaults._defaultable.fresh) return mod.defaults(final_defs);\n        return mod;\n      }\n\n      definer(faux_module, faux_exports, final_defs, require);\n      var api = faux_module.exports;\n      if ('defaults' in api && !api.defaults._defaultable) throw new Error('defaultable modules may not export a label called \"defaults\"');else api.defaults = make_defaulter(final_defs);\n      return api;\n    }\n  }\n} // Recursively merge higher-priority values into previously-set lower-priority ones.\n\n\nfunction merge_obj(high, low) {\n  if (!is_obj(high)) throw new Error('Bad merge high-priority');\n  if (!is_obj(low)) throw new Error('Bad merge low-priority');\n  var keys = [];\n\n  function add_key(k) {\n    if (!~keys.indexOf(k)) keys.push(k);\n  }\n\n  _each(_keys(high), add_key);\n\n  _each(_keys(low), add_key);\n\n  var result = {};\n\n  _each(keys, function (key) {\n    var high_val = high[key];\n    var low_val = low[key];\n    if (is_obj(high_val) && is_obj(low_val)) result[key] = merge_obj(high_val, low_val);else if (key in high) result[key] = high[key];else if (key in low) result[key] = low[key];else throw new Error('Unknown key type: ' + key);\n  });\n\n  return result;\n} //\n// Utilities\n//\n\n/**\n * Added for browser compatibility\n */\n\n\nfunction _keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var keys = [];\n\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) keys.push(k);\n  }\n\n  return keys;\n}\n\nfunction _each(obj, fn) {\n  for (var i = 0, len = obj.length; i < len; i++) {\n    fn(obj[i]);\n  }\n}\n\nfunction isArray(obj) {\n  if (Array.isArray) return Array.isArray(obj);\n  return toString.call(obj) === '[object Array]';\n}\n\nfunction good_args(func) {\n  // Make a function validate its parameters.\n  return good;\n\n  function good(_Mod, _Defs, _Definer) {\n    var args = Array.prototype.slice.call(arguments);\n    var m0dule = {\n      'exports': {}\n    };\n    if (args.length == 1) return func(m0dule, {}, args[0]);else if (args.length == 2) return func(m0dule, args[0], args[1]);else if (args.length > 2) return func.apply(this, args);else throw new Error('Unknown arguments: ' + JSON.stringify(args));\n  }\n}\n\nfunction is_obj(val) {\n  return val && !isArray(val) && typeof val === 'object';\n}","map":null,"metadata":{},"sourceType":"script"}