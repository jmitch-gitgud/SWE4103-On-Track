{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\"use strict\";\n\nexports.platform = require('./lib/platform');\nexports.createServer = require('./lib/server').createServer;\nexports.createUDPServer = require('./lib/server').createUDPServer;\nexports.createTCPServer = require('./lib/server').createTCPServer;\n\nvar client = require('./lib/client');\n\nexports.lookup = client.lookup;\nexports.resolve = client.resolve;\nexports.resolve4 = client.resolve4;\nexports.resolve6 = client.resolve6;\nexports.resolveMx = client.resolveMx;\nexports.resolveTxt = client.resolveTxt;\nexports.resolveSrv = client.resolveSrv;\nexports.resolveNs = client.resolveNs;\nexports.resolveCname = client.resolveCname;\nexports.reverse = client.reverse;\n\nvar consts = require('native-dns-packet').consts;\n\nexports.BADNAME = consts.BADNAME;\nexports.BADRESP = consts.BADRESP;\nexports.CONNREFUSED = consts.CONNREFUSED;\nexports.DESTRUCTION = consts.DESTRUCTION;\nexports.REFUSED = consts.REFUSED;\nexports.FORMERR = consts.FORMERR;\nexports.NODATA = consts.NODATA;\nexports.NOMEM = consts.NOMEM;\nexports.NOTFOUND = consts.NOTFOUND;\nexports.NOTIMP = consts.NOTIMP;\nexports.SERVFAIL = consts.SERVFAIL;\nexports.TIMEOUT = consts.TIMEOUT;\nexports.consts = consts;\nvar definedTypes = ['A', 'AAAA', 'NS', 'CNAME', 'PTR', 'NAPTR', 'TXT', 'MX', 'SRV', 'SOA'].forEach(function (type) {\n  exports[type] = function (opts) {\n    var obj = {};\n    opts = opts || {};\n    obj.type = consts.nameToQtype(type);\n    obj.class = consts.NAME_TO_QCLASS.IN;\n    Object.keys(opts).forEach(function (k) {\n      if (opts.hasOwnProperty(k) && ['type', 'class'].indexOf(k) == -1) {\n        obj[k] = opts[k];\n      }\n    });\n    return obj;\n  };\n});\n\nexports.Question = function (opts) {\n  var q = {},\n      qtype;\n  opts = opts || {};\n  q.name = opts.name;\n  qtype = opts.type || consts.NAME_TO_QTYPE.A;\n  if (typeof qtype === 'string' || qtype instanceof String) qtype = consts.nameToQtype(qtype.toUpperCase());\n  if (!qtype || typeof qtype !== 'number') throw new Error(\"Question type must be defined and be valid\");\n  q.type = qtype;\n  q.class = opts.class || consts.NAME_TO_QCLASS.IN;\n  return q;\n};\n\nexports.Request = client.Request;","map":null,"metadata":{},"sourceType":"script"}